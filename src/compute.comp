#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba8) uniform writeonly image2D resultImage;

layout (binding = 1) uniform Transform {
    mat4 mvp;
} ubo;

void main() {
    vec2 size = vec2(imageSize(resultImage));
    if(gl_GlobalInvocationID.x >= size.x || gl_GlobalInvocationID.y >= size.y) return;
    
    vec3 ray = vec3(vec4(gl_GlobalInvocationID.x / size.x * 2. - 1.0, gl_GlobalInvocationID.y / size.y *2. - 1.0, 100., 1.) * inverse(ubo.mvp));
    //ray /= ray.w;
    //ray -= vec4(0.0, 0.0, 0.0, 1.0) * ubo.mvp;
    //imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), ray);
    
    vec3 position = vec3(0.0);
    
    ray = normalize(ray);
    
    float length = 0;
    float density, nextdensity;
    do {
        density = nextdensity;
        length+=1.;
        if(length>100.0) {
            imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), vec4(1.0));
            return;
        }
        position+=ray;
        nextdensity = position.y - sin(position.x);
    } while(nextdensity > 0);
    position -= ray * nextdensity/(nextdensity+density);
    
    dot(vec3(0.0,1.0,0.0), position);
    
    imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), vec4(1.0)*dot(vec3(0.0,1.0,0.0), position));
    
}
